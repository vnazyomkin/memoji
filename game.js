'use strict';
var cards = document.querySelector('.cards');
var end = document.querySelector('.end');
var divTimer = document.querySelector('.timer');
var interval = 60;  // –≤—Ä–µ–º—è –æ—Ç—Å—á–µ—Ç–∞
var animals={       //  –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞ –∫–∞—Ä—Ç–∞—Ö
    dog: 'üê∂',
    cat: 'üê±',
    hourse: 'ü¶Ñ',
    pig: 'üê∑',
    panda: 'üêº',
    leon: 'ü¶Å'
};
Cards();    // –∑–∞–ø—É—Å–∫ –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞ –ø–æ –Ω–∞–∂–∞—Ç–∏—é
Game();     // –∑–∞–ø—É—Å–∫ –ª–æ–≥–∏–∫–∏ –∏–≥—Ä—ã

function Cards(){    
    cards.addEventListener('click', event=>{    // —Å–æ–±—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É
        if (event.target.tagName === 'DIV') event.target.parentNode.classList.toggle('flip');
    });
}

function Game(){
    randomAnimals();    // –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –∫–∞—Ä—Ç
    timer(interval);    // –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–∞–π–º–µ—Ä–∞
    firstClick();       // —Å—Ç–∞—Ä—Ç —Ç–∞–π–º–µ—Ä–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ

    cards.addEventListener('click', function(event){ // –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –∫–∞—Ä—Ç–µ
        var oldOpens=[];
        var opens=[];
        var parent=event.target.parentNode
        if (event.target.tagName === 'DIV' && !parent.classList.contains('flip-fixed')){  // –µ—Å–ª–∏ –∫–ª–∏–∫ –ø–æ –∫–∞—Ä—Ç–µ, –∫–æ—Ç–æ—Ä–∞—è –µ—â–µ –Ω–µ –æ—Ç–∫—Ä—ã—Ç–∞, —Ç–æ
            oldOpens = Array.from(document.querySelectorAll('.open'));  
                if (parent.classList.contains('open') && (oldOpens.length < 2)) {           // –µ—Å–ª–∏ –∫–ª–∏–∫ –ø–æ —Ç–æ–π –∂–µ –∫–∞—Ä—Ç–µ, —á—Ç–æ –∏ –ø—Ä–æ—à–ª—ã–π
                oldOpens[0].classList.remove('open');                                       // –∑–∞–∫—Ä—ã–≤–∞–µ–º –µ–µ
            } 
            else if (!parent.classList.contains('open')){                               //–µ—Å–ª–∏ –∫–ª–∏–∫ –Ω–∞ –¥—Ä—É–≥—É—é –∫–∞—Ä—Ç—É
                if (oldOpens.length === 2){                                               //–ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–≤—É—Ö –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–∞—Ä—Ç
                    if (oldOpens[0].dataset.animal !== oldOpens[1].dataset.animal){     //–µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Ä–∞–≤–Ω—ã, —Ç–æ 
                        oldOpens.forEach(item=>item.classList.remove('flip-fixed'));    // –ø–æ –Ω–æ–≤–æ–º—É –∫–ª–∏–∫—É –æ–Ω–∏ –æ–ø—è—Ç—å –∑–∞–∫—Ä—É—é—Ç—Å—è
                        oldOpens.forEach(item=>item.children[1].classList.remove('red'));// –ø–µ—Ä–µ—Å—Ç–∞—é—Ç –ø–æ–¥—Å–≤–µ—á–∏–≤–∞—Ç—å—Å—è –∫—Ä–∞—Å–Ω—ã–º
                    }
                    oldOpens.forEach(item=>item.classList.remove('open','flip'));       // —É –≤—Å–µ—Ö 
                }
                parent.classList.toggle('open');
                opens = Array.from(cards.querySelectorAll('.open')); // —Å–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –∏–∑ –≤—Å–µ—Ö –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–∞—Ä—Ç 
                if (opens.length > 1){    // –µ—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç—ã –±–æ–ª—å—à–µ 1 –∫–∞—Ä—Ç—ã
                        opens[0].classList.add('flip-fixed' );  //–¥–æ–±–∞–≤–ª—è–µ–º –∫ –Ω–∏–º –∫–ª–∞—Å—Å flip-fixed
                        opens[1].classList.add('flip-fixed');
                    if (opens[0].dataset.animal === opens[1].dataset.animal){ // –∏ –æ–Ω–∏  —Ä–∞–≤–Ω—ã
                        opens[0].children[1].classList.add('green');
                        opens[1].children[1].classList.add('green');
                    } 
                    else{
                        opens[0].children[1].classList.add('red');
                        opens[1].children[1].classList.add('red');     
                    }
                } 
                if(cards.querySelectorAll('.green').length === 12){
                    stop();
                    finish('win');
                    win();

                }
            }
        }
    });

    document.querySelector('.again').onclick = () => {  // –ò–ì–†–ê–¢–¨ –°–ù–ê–ß–ê–õ–ê
        Array.from(document.querySelectorAll('.lose')).forEach(item=>item.classList.remove('lose'));
        Array.from(document.querySelectorAll('.win')).forEach(item=>item.classList.remove('win'));
        Array.from(document.querySelectorAll('.green')).forEach(item=>item.classList.remove('green'));
        Array.from(document.querySelectorAll('.red')).forEach(item=>item.classList.remove('red'));
        Array.from(document.querySelectorAll('.open')).forEach(item=>item.classList.remove('open'));
        Array.from(document.querySelectorAll('.card.flip')).forEach(item=>item.classList.remove('flip'));
        Array.from(document.querySelectorAll('.flip-fixed')).forEach(item=>item.classList.remove('flip-fixed'));   
        firstClick();
        timer(interval);
        setTimeout(randomAnimals(),300); 
};
    
    function firstClick(){  // —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Ç–∞–π–º–µ—Ä–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∫–ª–∏–∫–µ –Ω–∞ –∫–∞—Ä—Ç—É
        var firstClick = true;
        Array.from(cards.querySelectorAll('.card-back')).forEach(item=>item.onclick = ()=>{
            if(firstClick){
                timerStart(interval);
                firstClick = false;
            }
        });
    }

    function randomAnimals(){                                               // —Ñ—É–Ω–∫—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –∫–∞—Ä—Ç
        var animalsKeys = Array.prototype.slice.call(Object.keys(animals)); // –º–∞—Å—Å–∏–≤ –∏–∑  –∫–ª—é—á–µ–π –æ–±—ä–µ–∫—Ç–∞ animals
        animalsKeys = animalsKeys.concat(animalsKeys);                      // —É–¥–≤–æ–∏–ª –µ–≥–æ
        shuffle(animalsKeys);                                               // –ø–µ—Ä–µ–º–µ—à–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ –∏–∑ –∫–ª—é—á–µ–π –≤ —Å–ª—É—á–∞–π–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
        animalsKeys.forEach((item, index)=>{                                // –∏—Ç–µ—Ä–∞—Ü–∏—è –ø–æ –º–∞—Å—Å–∏–≤—É animalsKeys
            var child = cards.children[index].querySelector('.card-front'); // -index-–∞—è –∫–∞—Ä—Ç–∞ = child
            child.textContent=animals[item];                                // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –Ω–µ–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ
            child.parentNode.dataset.animal = item;                         
        });
    }

    function shuffle(arr){    // —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –º–∞—Å—Å–∏–≤–∞
        var j, temp;
        for(var i = arr.length - 1; i > 0; i--){
            j = Math.floor(Math.random()*(i + 1));
            temp = arr[j];
            arr[j] = arr[i];
            arr[i] = temp;
        }
        return arr;
    }

    function timer(s){          //—Ñ—É–Ω–∫—Ü–∏—è —Ç–∞–π–º–µ—Ä–∞
        var time= new Date();
        time.setHours(0);
        time.setMinutes(0);
        time.setSeconds(s);
        var second, minutes;
        time.getSeconds() < 10 ?  second = '0' + time.getSeconds() : second = '' + time.getSeconds();
        time.getMinutes() < 10 ?  minutes = '0' + time.getMinutes() : second = '' + time.getMinutes();     
        divTimer.textContent = minutes + ':' + second;
    }
    var id;
    
    function timerStart(t) {    // —Ñ—É–Ω–∫—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
            id=setInterval(()=>{
            t--;
            timer(t);
            if (t<1){
                stop();
                finish('lose');
                lose();
            }
        },1000);
    }
    function stop(){    // —Ñ—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ç–∞–π–º–µ—Ä–∞
        clearInterval(id); 
    }

    function finish(f){  // —Ñ—É–Ω–∫—Ü–∏—è 
        document.querySelector('.window').classList.add(f);
        document.querySelector('.background').classList.add(f);
    }

    function lose(){
        createWord('lose');        
        document.querySelector('.again').textContent='Try again';
    }

    function win(){
        createWord('Win');        
        document.querySelector('.again').textContent='Play again';
    }

    function createWord(word){
        Array.from(end.children).forEach(item=>Kill(item));
        var item;
        for (var i=0; i < word.length; i++){
                item = document.createElement('div');
                item.textContent = word[i];
                item.classList.add('animation');
            end.appendChild(item);
        }
    }

    function Kill(object) {
        object.innerText = null;
        object.innerHTML = null;
        object.outerHTML = null;
        object = null;
        }   

}



